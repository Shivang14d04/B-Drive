/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    Bdrive: {
      address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      abi: [
        {
          type: "function",
          name: "OwnerFiles",
          inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "uint256", internalType: "uint256" },
          ],
          outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "fileCount",
          inputs: [],
          outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "files",
          inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
          outputs: [
            { name: "name", type: "string", internalType: "string" },
            { name: "cid", type: "string", internalType: "string" },
            { name: "owner", type: "address", internalType: "address" },
            { name: "timestamp", type: "uint256", internalType: "uint256" },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getAllFilesOfaUser",
          inputs: [{ name: "_owner", type: "address", internalType: "address" }],
          outputs: [
            {
              name: "",
              type: "tuple[]",
              internalType: "struct Bdrive.File[]",
              components: [
                { name: "name", type: "string", internalType: "string" },
                { name: "cid", type: "string", internalType: "string" },
                { name: "owner", type: "address", internalType: "address" },
                { name: "timestamp", type: "uint256", internalType: "uint256" },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getFile",
          inputs: [{ name: "_fileId", type: "uint256", internalType: "uint256" }],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct Bdrive.File",
              components: [
                { name: "name", type: "string", internalType: "string" },
                { name: "cid", type: "string", internalType: "string" },
                { name: "owner", type: "address", internalType: "address" },
                { name: "timestamp", type: "uint256", internalType: "uint256" },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "uploadFile",
          inputs: [
            { name: "_name", type: "string", internalType: "string" },
            { name: "_cid", type: "string", internalType: "string" },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "FileUploaded",
          inputs: [
            { name: "fileId", type: "uint256", indexed: true, internalType: "uint256" },
            { name: "owner", type: "address", indexed: true, internalType: "address" },
            { name: "name", type: "string", indexed: false, internalType: "string" },
            { name: "cid", type: "string", indexed: false, internalType: "string" },
            { name: "timestamp", type: "uint256", indexed: false, internalType: "uint256" },
          ],
          anonymous: false,
        },
        { type: "error", name: "FileCIDRequired", inputs: [] },
        { type: "error", name: "FileDoesNotExist", inputs: [] },
        { type: "error", name: "FileNameRequired", inputs: [] },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 1,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
